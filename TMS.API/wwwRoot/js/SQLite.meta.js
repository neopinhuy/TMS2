Bridge.assembly("SQLite", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["System","SQLite","System.Collections.Generic"];
    $m("SQLite.SQLiteCommand", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"cmdText","pt":$n[0].String,"ps":0}],"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[1].SQLiteConnection],"pi":[{"n":"cmdText","pt":$n[0].String,"ps":0},{"n":"connection","pt":$n[1].SQLiteConnection,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"ExecuteReader","t":8,"tpc":1,"tprm":["T"],"sn":"ExecuteReader","rt":$n[2].List$1(System.Object)},{"a":2,"n":"CommandText","t":4,"rt":$n[0].String,"sn":"CommandText"},{"a":2,"n":"Connection","t":4,"rt":$n[1].SQLiteConnection,"sn":"Connection"},{"a":2,"n":"Parameters","t":4,"rt":$n[2].List$1(SQLite.SQLiteParameter),"sn":"Parameters"},{"a":4,"n":"parser","is":true,"t":4,"rt":$n[1].SQLiteParser,"sn":"parser"}]}; }, $n);
    $m("SQLite.PrimaryKey", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; }, $n);
    $m("SQLite.AutoIncrement", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; }, $n);
    $m("SQLite.StorageMode", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"DictinaryStorage","is":true,"t":4,"rt":$n[1].StorageMode,"sn":"DictinaryStorage","box":function ($v) { return Bridge.box($v, SQLite.StorageMode, System.Enum.toStringFn(SQLite.StorageMode));}},{"a":2,"n":"LocalStorage","is":true,"t":4,"rt":$n[1].StorageMode,"sn":"LocalStorage","box":function ($v) { return Bridge.box($v, SQLite.StorageMode, System.Enum.toStringFn(SQLite.StorageMode));}},{"a":2,"n":"SessionStorage","is":true,"t":4,"rt":$n[1].StorageMode,"sn":"SessionStorage","box":function ($v) { return Bridge.box($v, SQLite.StorageMode, System.Enum.toStringFn(SQLite.StorageMode));}}]}; }, $n);
    $m("SQLite.SQLiteConnection", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[1].StorageMode],"pi":[{"n":"path","dv":"","o":true,"pt":$n[0].String,"ps":0},{"n":"storageMode","dv":0,"o":true,"pt":$n[1].StorageMode,"ps":1}],"sn":"ctor"},{"a":2,"n":"CreateTable","t":8,"tpc":1,"tprm":["T"],"sn":"CreateTable","rt":$n[0].Void},{"a":2,"n":"Delete","t":8,"pi":[{"n":"row","pt":System.Object,"ps":0}],"tpc":1,"tprm":["T"],"sn":"Delete","rt":$n[0].Int32,"p":[System.Object],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"DeleteAll","t":8,"tpc":1,"tprm":["T"],"sn":"DeleteAll","rt":$n[0].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Insert","t":8,"pi":[{"n":"row","pt":System.Object,"ps":0}],"tpc":1,"tprm":["T"],"sn":"Insert","rt":$n[0].Int32,"p":[System.Object],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"InsertAll","t":8,"pi":[{"n":"inserts","pt":$n[2].IEnumerable$1(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"InsertAll","rt":$n[0].Int32,"p":[$n[2].IEnumerable$1(System.Object)],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Table","t":8,"tpc":1,"tprm":["T"],"sn":"Table","rt":$n[2].List$1(System.Object)},{"a":2,"n":"Update","t":8,"pi":[{"n":"row","pt":System.Object,"ps":0}],"tpc":1,"tprm":["T"],"sn":"Update","rt":$n[0].Int32,"p":[System.Object],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"UpdateAll","t":8,"pi":[{"n":"updates","pt":$n[2].IEnumerable$1(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"UpdateAll","rt":$n[0].Int32,"p":[$n[2].IEnumerable$1(System.Object)],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"getTable","t":8,"tpc":1,"tprm":["T"],"sn":"getTable","rt":$n[0].String},{"a":1,"n":"setTable","t":8,"pi":[{"n":"rows","pt":$n[2].List$1(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"setTable","rt":$n[0].Void,"p":[$n[2].List$1(System.Object)]},{"a":4,"n":"StorageMode","t":4,"rt":$n[1].StorageMode,"sn":"StorageMode","box":function ($v) { return Bridge.box($v, SQLite.StorageMode, System.Enum.toStringFn(SQLite.StorageMode));}},{"a":4,"n":"prefix","t":4,"rt":$n[0].String,"sn":"prefix"}]}; }, $n);
    $m("SQLite.SQLiteParameter", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[0].Object],"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"parameter","pt":$n[0].Object,"ps":1}],"sn":"ctor"},{"a":2,"n":"Name","t":4,"rt":$n[0].String,"sn":"Name"},{"a":2,"n":"Parameter","t":4,"rt":$n[0].Object,"sn":"Parameter"}]}; }, $n);
    $m("SQLite.SQLiteParser", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Parse","t":8,"pi":[{"n":"command","pt":$n[0].String,"ps":0}],"sn":"Parse","rt":System.Array.type(SQLite.Node),"p":[$n[0].String]},{"a":1,"n":"ParseExpression","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1},{"n":"isHaving","dv":false,"o":true,"pt":$n[0].Boolean,"ps":2},{"n":"isGroupBy","dv":false,"o":true,"pt":$n[0].Boolean,"ps":3},{"n":"isOnClause","dv":false,"o":true,"pt":$n[0].Boolean,"ps":4}],"sn":"ParseExpression","rt":$n[0].Void,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node),$n[0].Boolean,$n[0].Boolean,$n[0].Boolean]},{"a":1,"n":"ParseFrom","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1}],"sn":"ParseFrom","rt":$n[0].Void,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node)]},{"a":1,"n":"ParseSelectOrGroupBy","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1},{"n":"isGroupBy","dv":false,"o":true,"pt":$n[0].Boolean,"ps":2}],"sn":"ParseSelectOrGroupBy","rt":$n[0].Void,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node),$n[0].Boolean]},{"a":1,"n":"ParseSymbol","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1}],"sn":"ParseSymbol","rt":$n[0].Boolean,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node)],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"ParseTableName","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1}],"sn":"ParseTableName","rt":$n[0].Void,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node)]},{"a":1,"n":"ParseVarOrLit","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1}],"sn":"ParseVarOrLit","rt":$n[0].Boolean,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node)],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"ParseWhereOrHaving","t":8,"pi":[{"n":"tokenReader","pt":$n[1].SQLiteTokenReader,"ps":0},{"n":"tokens","pt":$n[2].List$1(SQLite.Node),"ps":1},{"n":"isHaving","dv":false,"o":true,"pt":$n[0].Boolean,"ps":2},{"n":"isOnClause","dv":false,"o":true,"pt":$n[0].Boolean,"ps":3}],"sn":"ParseWhereOrHaving","rt":$n[0].Boolean,"p":[$n[1].SQLiteTokenReader,$n[2].List$1(SQLite.Node),$n[0].Boolean,$n[0].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"FromWord","is":true,"t":4,"rt":$n[0].String,"sn":"FromWord"},{"a":2,"n":"GroupByWord","is":true,"t":4,"rt":$n[0].String,"sn":"GroupByWord"},{"a":2,"n":"GroupWord","is":true,"t":4,"rt":$n[0].String,"sn":"GroupWord"},{"a":2,"n":"HavingWord","is":true,"t":4,"rt":$n[0].String,"sn":"HavingWord"},{"a":2,"n":"InnerWord","is":true,"t":4,"rt":$n[0].String,"sn":"InnerWord"},{"a":2,"n":"JoinWord","is":true,"t":4,"rt":$n[0].String,"sn":"JoinWord"},{"a":2,"n":"LeftWord","is":true,"t":4,"rt":$n[0].String,"sn":"LeftWord"},{"a":2,"n":"OnWord","is":true,"t":4,"rt":$n[0].String,"sn":"OnWord"},{"a":2,"n":"OuterWord","is":true,"t":4,"rt":$n[0].String,"sn":"OuterWord"},{"a":2,"n":"RightWord","is":true,"t":4,"rt":$n[0].String,"sn":"RightWord"},{"a":2,"n":"SelectWord","is":true,"t":4,"rt":$n[0].String,"sn":"SelectWord"},{"a":2,"n":"WhereWord","is":true,"t":4,"rt":$n[0].String,"sn":"WhereWord"}]}; }, $n);
    $m("SQLite.JSqlOpCodes", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Alias","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Alias","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"And","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"And","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"ArgumentPlacement","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"ArgumentPlacement","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"BitShiftLeft","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"BitShiftLeft","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"BitShiftRight","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"BitShiftRight","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"BitWiseOr","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"BitWiseOr","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"CloseBrackets","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"CloseBrackets","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Div","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Div","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"EndOfQuery","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"EndOfQuery","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Equal","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Equal","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"FromClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"FromClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"FromField","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"FromField","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"GroupClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"GroupClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"HavingClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"HavingClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"InnerJoin","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"InnerJoin","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Larger","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Larger","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"LargerEqual","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"LargerEqual","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"LeftJoin","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"LeftJoin","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Minus","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Minus","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Mod","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Mod","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Mul","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Mul","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Not","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Not","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"NotEqual","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"NotEqual","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"OnClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"OnClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"OpenBrackets","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"OpenBrackets","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Or","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Or","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"OuterJoin","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"OuterJoin","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Plus","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Plus","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"RightJoin","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"RightJoin","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SelectAll","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SelectAll","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SelectClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SelectClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SelectName","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SelectName","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SelectNumber","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SelectNumber","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SelectString","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SelectString","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"Smaller","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"Smaller","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"SmallerEqual","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"SmallerEqual","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}},{"a":2,"n":"WhereClause","is":true,"t":4,"rt":$n[1].JSqlOpCodes,"sn":"WhereClause","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}}]}; }, $n);
    $m("SQLite.Node", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Code","t":4,"rt":$n[1].JSqlOpCodes,"sn":"Code","box":function ($v) { return Bridge.box($v, SQLite.JSqlOpCodes, System.Enum.toStringFn(SQLite.JSqlOpCodes));}}]}; }, $n);
    $m("SQLite.NodeNumber", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Number1","t":4,"rt":$n[0].Decimal,"sn":"Number1"}]}; }, $n);
    $m("SQLite.NodeString", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Data1","t":4,"rt":$n[0].String,"sn":"Data1"}]}; }, $n);
    $m("SQLite.NodeString2", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Data2","t":4,"rt":$n[0].String,"sn":"Data2"}]}; }, $n);
    $m("SQLite.NodeString3", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Data3","t":4,"rt":$n[0].String,"sn":"Data3"}]}; }, $n);
    $m("SQLite.SQLiteStorageModes", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"GetItem","is":true,"t":8,"pi":[{"n":"key","pt":$n[0].String,"ps":0},{"n":"mode","pt":$n[1].StorageMode,"ps":1}],"sn":"GetItem","rt":$n[0].String,"p":[$n[0].String,$n[1].StorageMode]},{"a":2,"n":"SetItem","is":true,"t":8,"pi":[{"n":"key","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[0].String,"ps":1},{"n":"mode","pt":$n[1].StorageMode,"ps":2}],"sn":"SetItem","rt":$n[0].Void,"p":[$n[0].String,$n[0].String,$n[1].StorageMode]},{"a":1,"n":"_innerStorage","is":true,"t":4,"rt":$n[2].Dictionary$2(System.String,System.String),"sn":"_innerStorage"}]}; }, $n);
    $m("SQLite.SQLiteTableMeta", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"GetMeta","is":true,"t":8,"pi":[{"n":"connection","pt":$n[1].SQLiteConnection,"ps":0}],"tpc":1,"tprm":["T"],"sn":"GetMeta","rt":$n[1].SQLiteTableMeta,"p":[$n[1].SQLiteConnection]},{"a":2,"n":"HasAutoIncrement","t":8,"sn":"HasAutoIncrement","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"HasPrimaryKeyName","t":8,"sn":"HasPrimaryKeyName","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"NextAutoIncrement","t":8,"pi":[{"n":"saveMeta","dv":true,"o":true,"pt":$n[0].Boolean,"ps":0}],"sn":"NextAutoIncrement","rt":$n[0].Int64,"p":[$n[0].Boolean]},{"a":2,"n":"Save","t":8,"sn":"Save","rt":$n[0].Void},{"a":2,"n":"WasNew","t":8,"sn":"WasNew","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"createMeta","is":true,"t":8,"pi":[{"n":"metaString","pt":$n[0].String,"ps":0},{"n":"connection","pt":$n[1].SQLiteConnection,"ps":1}],"tpc":1,"tprm":["T"],"sn":"createMeta","rt":$n[1].SQLiteTableMeta,"p":[$n[0].String,$n[1].SQLiteConnection]},{"a":2,"n":"AutoIncrementName","t":4,"rt":$n[0].String,"sn":"AutoIncrementName"},{"a":2,"n":"AutoIncrementSet","t":4,"rt":$n[0].Int64,"sn":"AutoIncrementSet"},{"a":2,"n":"AutoIncrementTotal","t":4,"rt":$n[0].Int64,"sn":"AutoIncrementTotal"},{"a":2,"n":"PrimaryKeyName","t":4,"rt":$n[0].String,"sn":"PrimaryKeyName"},{"a":2,"n":"TableMetaExtension","is":true,"t":4,"rt":$n[0].String,"sn":"TableMetaExtension"},{"a":1,"n":"_innerConnection","t":4,"rt":$n[1].SQLiteConnection,"sn":"_innerConnection"},{"a":1,"n":"_metaString","t":4,"rt":$n[0].String,"sn":"_metaString"},{"a":1,"n":"_wasNew","t":4,"rt":$n[0].Boolean,"sn":"_wasNew","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"memoryTableMeta","is":true,"t":4,"rt":$n[2].Dictionary$2(System.String,SQLite.SQLiteTableMeta),"sn":"memoryTableMeta"}]}; }, $n);
    $m("SQLite.SQLiteTokenReader", function () { return {"att":1048576,"a":4,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String],"pi":[{"n":"source","pt":$n[0].String,"ps":0}],"sn":"ctor"},{"a":2,"n":"EqualTo","t":8,"pi":[{"n":"words","ip":true,"pt":$n[0].Array.type(System.String),"ps":0}],"sn":"EqualTo","rt":$n[0].Boolean,"p":[$n[0].Array.type(System.String)],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"GetValue","t":8,"sn":"GetValue","rt":$n[0].Decimal},{"a":2,"n":"IsNumberLiteral","t":8,"sn":"IsNumberLiteral","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"MoveNext","t":8,"pi":[{"n":"count","dv":1,"o":true,"pt":$n[0].Int32,"ps":0}],"sn":"MoveNext","rt":$n[0].Boolean,"p":[$n[0].Int32],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"CanMoveNext","t":16,"rt":$n[0].Boolean,"g":{"a":2,"n":"get_CanMoveNext","t":8,"rt":$n[0].Boolean,"fg":"CanMoveNext","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"CanMoveNext"},{"a":2,"n":"Current","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Current","t":8,"rt":$n[0].String,"fg":"Current"},"fn":"Current"},{"a":2,"n":"Next","t":16,"rt":$n[0].String,"g":{"a":2,"n":"get_Next","t":8,"rt":$n[0].String,"fg":"Next"},"fn":"Next"},{"a":2,"n":"NameChar","is":true,"t":4,"rt":$n[0].Char,"sn":"NameChar","box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"StringChar","is":true,"t":4,"rt":$n[0].Char,"sn":"StringChar","box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"Words","t":4,"rt":$n[0].Array.type(System.String),"sn":"Words"},{"a":2,"n":"_pos","t":4,"rt":$n[0].Int32,"sn":"_pos","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
});
